<html>
  <head>
    <title>SportsTweet</title>
    <link href='http://fonts.googleapis.com/css?family=Lato:400,700' rel='stylesheet' type='text/css'>
    <script type="text/javascript" src="<%= @faye_server %>.js"></script>
    <%= javascript_include_tag "jquery.slides.min.js" %>
  </head>
  <body>
    <div class="container">

      <!--INTRODUCTION -->
      <div class="left-col">
        <img src="http://i.imgur.com/KCLVHYX.png" alt="" class="logo" />
        <div class="tweet-info">
        <p>We show you the hottest topics in professional basketball on Twitter. Using <span class="num_tweets"><%= num_tweets %></span> tweets from the past <span class="elapsed_minutes"><%= elapsed_minutes %></span> minutes.</p>
          <p>Created by:<br> Rich Chang (<a href="http://twitter.com/richhchang" target="_blank_">@richhchang</a>),<br> Donald Leonard (<a href="http://twitter.com/Mr_2FirstNames" target="_blank_">@Mr_2FirstNames</a>), <br>and Sheng Wu (<a href="http://twitter.com/shenghis" target="_blank_">@shenghis</a>).</p>
        </div>
      </div>

      <!-- PICTURES -->
      <div id="slides">
        <% get_pictures.each do |pic| %>
          <div class="slide">
            <%= image_tag pic.media %>
            <div class="caption">
              <%= pic.text %>
            </div>
          </div>
        <% end %>
      </div>

      <!-- TEAM CHART -->
      <div class="popular slide">
        <h3 class="bar-reset">Most mentioned: <div class="mention-label teams-label active-label">teams</div><div class="mention-label players-label">players</div></h3>
        <svg id="chart" class="chart"></svg>
      </div>

      <!-- TWEET STREAMING -->
      <div class="tweet_container">
        <h3>Tweets about the NBA:</h3>
        <div class="tweets">
          <% get_twelve_tweets.each do |tweet| %>
            <div class="tweet"><%= tweet.text %> &mdash; <a class="author" href="http://twitter.com/account/redirect_by_id?id=<%= tweet.user_id %>" target="_blank">@<%= tweet.screen_name %></a></div>
          <% end %>
        </div>
      </div>
    </div>


    <!--TEAM JAVASCRIPT -->
    <script type="text/javascript">

        // Set up initial bar graph
        var w = 400,
            h = 400,
            colors = d3.scale.category20();
     
        var data = [
            <% show_popular_teams.each do |team, count| %>
              {"label":"<%= team %>", "value": <%= count %>},
            <% end %>
        ];
        var chart = d3.select("#chart")
                      .attr("width", w)
                      .attr("height", h)

        // function to draw a bar graph
        // data is a list of {"label": ..., "value": ...} pairs
        var drawGraph = function(chart, data) {
            var values = data.map(function(d, i) { return d.value; });
            var barHeight = h / data.length;
            var x = d3.scale.linear()
                      .domain([0, d3.max(values)])
                      .range([0, w]);

            // If we're drawing something with same number of bars,
            // we can use transitions
            if (data.length == chart.selectAll("rect")[0].length) {
                chart.selectAll("rect")
                     .data(values)
                     .transition()
                     .attr("width", x);

                chart.selectAll("text")
                     .data(values)
                     .transition()
                     .attr("name", function(d, i) { return data[i].label; })
                     .text(function(d, i) { 
                         return "{0} ({1} mentions)".format(data[i].label, d); 
                     });
                return;
            }

            // Otherwise, remove any old information
            // and redraw the chart
            chart.selectAll("rect")
                 .remove();
            chart.selectAll("text")
                 .remove();

            chart.selectAll("rect")
                 .data(values)
                 .enter().append("rect")
                 .attr("y", function(d, i) { return i*barHeight; })
                 .attr("width", x)
                 .attr("height", barHeight)
                 .style("fill", function(d, i) { return colors(i); });

            chart.selectAll("text")
                 .data(values)
                 .enter().append("text")
                 .attr("x", 10)
                 .attr("y", function(d, i) { return (i+0.5)*barHeight; })
                 .attr("dx", -3)
                 .attr("dy", ".35em")
                 .attr("name", function(d, i) { return data[i].label; })
                 .text(function(d, i) { 
                     return "{0} ({1} mentions)".format(data[i].label, d); 
                 });

            return chart;
        }

        drawGraph(chart, data);

    // Compare function for sorting an array of
    // [{"label": "some_name", "value": 23}] values by descending count
    var data_compare = function(a, b) {
        if (b.value > a.value) {
            return 1;
        } else if (a.value > b.value) {
            return -1;
        } else {
            return 0;
        }
    };
    
    // Multiply strings
    String.prototype.repeat = function(num) {
        return new Array(num + 1).join(this);
    }

    // Drill down from teams -> players
    // (disabled for now)
    /*
    $('#chart').on('click', 'text', function() {
        var team = $(this).attr('name');
        $.getJSON('/players/on_team/{0}.json'.format(team), function(data) {
            var player_data = data.map(function(d, i) { 
                return {"label": d[0], "value": d[1]}
            }).sort(data_compare);

            // Redraw chart
            drawGraph(chart, player_data);

            $('#chart').children('text').removeClass('teams-filter');
        });
    });
    */

    // Connect to a stream of tweets
    var addIncomingTweet = function(data) {
        var elem = '<div class="tweet" style="display: none;">{0} &mdash; <a class="author" href="http://twitter.com/account/redirect_by_id?id={1}" target="_blank">@{2}</a></div>'.format(data.text, data.user_id, data.screen_name);
        $('.tweets').prepend(elem);
        var tweets = $('.tweet');
        tweets.slideDown();
        console.log(data.mentions);

        if (tweets.length > 12) {
            $(tweets[tweets.length-1]).remove();
        }

        // Increment counter
        var tweetCounter = $('.num_tweets');
        tweetCounter.text(parseInt(tweetCounter.text()) + 1);
    };

    // Connect to Faye message server
    if (typeof Faye !== 'undefined') {
        var faye = new Faye.Client('<%= @faye_server %>');
        faye.subscribe('/tweets', addIncomingTweet);
    } else {
        $('.tweets').prepend("<p>A connection could not be established with the server that handles streaming tweets.</p>");
    }

    // Tabs for bar chart
    $('.teams-label').click(function() {
        $.getJSON('/cached_results/name/top_teams.json', function(data) {
            var team_data = data.map(function(d, i) { 
                return {"label": d[0], "value": d[1]}
            }).sort(data_compare);

            // Redraw chart
            drawGraph(chart, team_data);
        });
        $('.mention-label').removeClass('active-label');
        $(this).addClass('active-label');
    });
    $('.players-label').click(function() {
        $.getJSON('/cached_results/name/top_players.json', function(data) {
            player_data = data.map(function(d, i) { 
                return {"label": d[0], "value": d[1]}
            }).sort(data_compare);

            // Redraw chart
            drawGraph(chart, player_data);
        });
        $('.mention-label').removeClass('active-label');
        $(this).addClass('active-label');
    });

    // Cycle through the bar graphs
    var barGraphCycleInterval = 5300;
    var cycleBarGraphs = function() {
        if (!$('.popular').hasClass('hover')) {
            if ($('.players-label').hasClass('active-label')) {
                $('.teams-label').click();
            } else {
                $('.players-label').click();
            }
        }
        window.setTimeout(cycleBarGraphs, barGraphCycleInterval);
    };
    window.setTimeout(cycleBarGraphs, barGraphCycleInterval);

    // Pause on hover for cycling
    $('.popular').on('mouseenter mouseleave', function() {
        $(this).toggleClass('hover');
    });

    </script>
  </body>
</html>
